/*
1. –î–∞–Ω —Å–ø–∏—Å–æ–∫ Account{Person person, String iban, double balance}.
–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å Map, –≥–¥–µ –∫–ª—é—á–æ–º –±—É–¥–µ—Ç Person, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ–º —Å–ø–∏—Å–æ–∫ –µ–≥–æ —Å—á–µ—Ç–æ–≤.
2. –î–∞–Ω —Å–ø–∏—Å–æ–∫ Person(name,age) –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–ø–∏—Å–∞—Ç—å –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç Map<Person,Integer>,
–≥–¥–µ –∫–ª—é—á —ç—Ç–æ —Å–∞–º Person, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ ‚Äì —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –æ–Ω –≤—Å—Ç—Ä–µ—Ç–∏–ª—Å—è –≤ —Å–ø–∏—Å–∫–µ.
3. –î–æ–ø—É—Å—Ç–∏–º, –í—ã –ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –∏–≥—Ä–∞–º –ù–•–õ (–ø—Ä–∏–≤–µ—Ç –ê–ª–µ–∫—Å–µ—é üòÄ ).
–î–æ–ø—É—Å—Ç–∏–º, —É –≤–∞—Å –µ—Å—Ç—å –æ–±—ä–µ–∫—Ç GameInfo {String team1, String team2, int goalsTeam1, int goalsTeam2}
(—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ, goalsTeam1 ‚Äì –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ–ª–æ–≤ –∑–∞–±–∏—Ç—ã—Ö –∫–æ–º–∞–Ω–¥–æ–π Team1).
–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ –¥–∞–Ω —Å–ø–∏—Å–æ–∫ —Ç–∞–∫–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤.
–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ª—É—á–∏—Ç—å Map, –≥–¥–µ –∫–ª—é—á–æ–º –±—É–¥–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ–º, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–±–∏—Ç—ã—Ö –≥–æ–ª–æ–≤.
*/
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

public class Main {
    public static void main(String[] args) {
        Person p1 = new Person("Jack", 33);
        Person p2 = new Person("Ann", 24);
        Person p3 = new Person("Mike", 19);

        //----------------- –ó–∞–¥–∞—á–∞ 1 -----------------
        List<Account> accounts = List.of(
                new Account(p1, "DE01", 150.34),
                new Account(p2, "DE02", 7692.54),
                new Account(p1, "DE06", 450.42),
                new Account(p3, "DE14", 2450.59),
                new Account(p1, "DE11", 194.39),
                new Account(p3, "DE08", 765.23),
                new Account(p1, "DE23", 1656.10)
        );

        Map<Person, List<String>> map1 = accounts.stream()
                .collect(Collectors.groupingBy(Account::getPerson, Collectors.mapping(Account::getIban, Collectors.toList())));
        System.out.println(map1);

        //----------------- –ó–∞–¥–∞—á–∞ 1 ----------------- (2–π –≤–∞—Ä–∏–∞–Ω—Ç)
        Map<Person, String> map2 = accounts.stream()
                .collect(Collectors.toMap(Account::getPerson, Account::getIban, (iban1, iban2) -> (iban1 + "|" + iban2)));
        System.out.println(map2);

        //----------------- –ó–∞–¥–∞—á–∞ 2 -----------------
        System.out.println(personsCount(List.of(p1, p1, p1, p1, p1, p1, p2, p2, p2, p3)));

        //----------------- –ó–∞–¥–∞—á–∞ 3 -----------------
        // (–Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç, –µ—Å–ª–∏ –æ–¥–Ω–∞ –∏ —Ç–∞–∂–µ –∫–æ–º–∞–Ω–¥–∞ –±—ã–ª–∞ –≤ –ø–æ–ª–µ team1 –∏ team2)
        List<GameInfo> gamesList = List.of(
                new GameInfo("Boston", "Florida", 6, 8),
                new GameInfo("Seattle", "Colorado", 1, 4),
                new GameInfo("Edmonton", "Florida", 4, 3),
                new GameInfo("Colorado", "Carolina", 5, 7),
                new GameInfo("Edmonton", "Los Angeles", 6, 2)
        );

        Map<String, Integer> team1GoalsMap = gamesList.stream()
                .collect(Collectors.toMap(GameInfo::getTeam1, GameInfo::getGoalsTeam1, Integer::sum));
        Map<String, Integer> team2GoalsMap = gamesList.stream()
                .collect(Collectors.toMap(GameInfo::getTeam2, GameInfo::getGoalsTeam2, Integer::sum));

        Map<String, Integer> allTeamsGoals = new HashMap<>();
        allTeamsGoals.putAll(team1GoalsMap);
        allTeamsGoals.putAll(team2GoalsMap);

        System.out.println(allTeamsGoals);

        //----------------- –ó–∞–¥–∞—á–∞ 3 ----------------- (–±–µ–∑ —Å—Ç—Ä–∏–º–æ–≤, —Å –ø–æ–º–æ—â—å—é merge)

        Map<String, Integer> allTeamsGoals2 = new HashMap<>();
        for (GameInfo game : gamesList) {
            allTeamsGoals2.merge(game.getTeam1(), game.getGoalsTeam1(), Integer::sum);
            allTeamsGoals2.merge(game.getTeam2(), game.getGoalsTeam2(), Integer::sum);
        }

        System.out.println("—Å –ø–æ–º–æ—â—å—é merge(): " + allTeamsGoals2);
    }

    public static Map<Person, Integer> personsCount(List<Person> personList) {
        return personList.stream()
                .collect(Collectors.groupingBy(person -> person, Collectors.summingInt(person -> 1)));
    }
}